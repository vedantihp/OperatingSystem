#include <iostream>
#include <queue>
#include <string>

using namespace std;

// Define a struct to represent a process
struct Process {
    string name;
    int priority;
    int time_remaining;
    
    // Constructor
    Process(string n, int p, int t) : name(n), priority(p), time_remaining(t) {}
    
    // Define the less-than operator for comparison in the priority queue
    bool operator<(const Process& other) const {
        return priority < other.priority;
    }
};

int main() {
    // Create a priority queue of processes
    priority_queue<Process> pq;

    // Add some processes to the queue
    pq.push(Process("P1", 3, 10));
    pq.push(Process("P2", 1, 5));
    pq.push(Process("P3", 2, 8));

    // Run the processes in priority order
    while (!pq.empty()) {
        Process p = pq.top();
        pq.pop();
        cout << "Running process " << p.name << " with priority " << p.priority << endl;
        p.time_remaining--;
        if (p.time_remaining > 0) {
            pq.push(p);
        }
    }

    return 0;
}
